{"version":3,"sources":["bodies/hair.js"],"names":["hair","position","Composites","stack","x","y","Bodies","rectangle","collisionFilter","group","render","sprite","texture","xScale","yScale","density","angle","Composite","add","Constraint","create","bodyB","bodies","pointB","pointA","stiffness","visible","angles","angleAMin","Math","PI","angleAMax","angleAStiffness","angleBMin","angleBMax","angleBStiffness","lastcos","cos","length","lastsin","sin","body","ignoreGravity","bodyA","i","remove","constraints","recthair","Hair","hat","text"],"mappings":"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","file":"hair.6011daeb.js","sourceRoot":"..","sourcesContent":["class hair {\r\n    constructor ({position}) {\r\n        this.position = position\r\n    }\r\n    create() {\r\n        return Composites.stack(this.position.x, this.position.y, 1, 1, 10, 0, function(x, y) {\r\n            return Bodies.rectangle(x  - 41, y, 110, 80, { \r\n                collisionFilter: { group: group }, \r\n                render: {\r\n                    sprite: {\r\n                        texture: 'img/Rect.png',\r\n                        xScale: .6,\r\n                        yScale: .6\r\n                    }\r\n                },\r\n                density: 0.00001,\r\n                angle: -1.55\r\n            })\r\n        })\r\n    }\r\n    createConstraint(stack) {\r\n        Composite.add(stack, Constraint.create({ \r\n            bodyB: stack.bodies[0],\r\n            pointB: { x: 0, y: 15 },\r\n            pointA: { x: stack.bodies[0].position.x, y: stack.bodies[0].position.y + 15 },\r\n            stiffness: 1,\r\n            render: {\r\n                visible: false,\r\n                angles: true\r\n            },\r\n            angleAMin: Math.PI / 2,\r\n            angleAMax: Math.PI / 2,\r\n            angleAStiffness: 0.01,\r\n            angleBMin: Math.PI / 2,\r\n            angleBMax: Math.PI / 2,\r\n            angleBStiffness: 0.01\r\n        }));\r\n    }\r\n    addChain(stack) {\r\n        const lastcos = Math.cos(stack.bodies[stack.bodies.length - 1].angle)\r\n        const lastsin = Math.sin(stack.bodies[stack.bodies.length - 1].angle)\r\n        const body = Bodies.rectangle(stack.bodies[stack.bodies.length - 1].position.x + (lastcos * 40) , stack.bodies[stack.bodies.length - 1].position.y - (lastsin * -40), 110, 80, { \r\n            collisionFilter: { group: group }, \r\n            render: {\r\n                sprite: {\r\n                    texture: 'img/Rect.png',\r\n                    xScale: .6,\r\n                    yScale: .6\r\n                }\r\n            },\r\n            density: 0.00001,\r\n            ignoreGravity: true,\r\n            angle: stack.bodies[stack.bodies.length - 1].angle\r\n        });\r\n        const cos = Math.cos(body.angle)\r\n        const sin = Math.sin(body.angle)\r\n        Composite.add(stack, body)\r\n        Composite.add(stack, Constraint.create({ \r\n            bodyB: body,\r\n            bodyA: stack.bodies[stack.bodies.length - 2],\r\n            pointB: { x: cos * -15, y: sin * -15},\r\n            pointA: { x: cos * 22, y: sin * 22 },\r\n            stiffness: 1,\r\n            length: 0,\r\n            render: {\r\n                visible: false,\r\n                angles: false\r\n            },\r\n            angleAMin: Math.PI / 2,\r\n            angleAMax: Math.PI / 2,\r\n            angleAStiffness: 0.01,\r\n            angleBMin: Math.PI / 2,\r\n            angleBMax: Math.PI / 2,\r\n            angleBStiffness: 0.01\r\n        }))\r\n    }\r\n    removeChain(stack) {\r\n        for(let i = 0; i <= 3; i++) {\r\n            Composite.remove(stack, stack.bodies[stack.bodies.length - 1])\r\n            Composite.remove(stack, stack.constraints[stack.constraints.length - 1])\r\n        }\r\n        new recthair().create(Hair)\r\n        new hat().create(Hair)\r\n        new text().create(Hair)\r\n    }\r\n}"]}